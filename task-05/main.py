#!/usr/bin/env python3

CYAN = "\033[96m"
UNDERLINE = "\033[4m"
END = "\033[0m"


def print_question(question):
    return print(f"{UNDERLINE}{CYAN}{question}{END}{END}")


#     _
#   /' \
#  /\_, \
#  \/_/\ \
#     \ \ \
#      \ \_\
#       \/_/
#
#
print_question(
    """
問1.
飲食店のメニュー管理のフォーマットは以下のとおりのディクショナリーの定義となっているものとし、

menu = ["オードブル", "スープ", "メインディッシュ", "デザート"]

飲食店Aのメニューは下記の構成となっているものとする

【飲食店Aのメニュー】
・オードブル
冬の京野菜サラダ

・スープ
白いんげん豆のポタージュ

・メインデュッシュ
牛フィレステーキ

・デザート
自家製アイスクリーム

上記をディクショナリーに追加し、下記のフォーマットで出力するプログラムを作成せよ

==============================
オードブル：（オードブル名）
スープ：（スープ名）
メインディッシュ：（メインデュッシュ名）
デザート：（デザート名）
==============================

"""
)

menu = ["オードブル", "スープ", "メインディッシュ", "デザート"]
restaurantA = {
    "オードブル": "冬の京野菜サラダ",
    "スープ": "白いんげん豆のポタージュ",
    "メインディッシュ": "牛フィレステーキ",
    "デザート": "自家製アイスクリーム",
}


def print_restaurant(restaurant):
    print("==============================")
    for item in menu:
        print(f"{item}：（{restaurant.get(item)}）")
    print("==============================")


print_restaurant(restaurantA)

#    ___
#  /'___`\
# /\_\ /\ \
# \/_/// /__
#    // /_\ \
#   /\______/
#   \/_____/
#
#
print_question(
    """
問2.
下記のディクショナリーを定義する

emoji_convert = { "を" : "̀", "絵" : "(", "換" : "•", "変" : "ㅂ", "字" : "•", "る" : ")", "モ" : "✧", "文" : "๑", "デ" : "و", "す" : "́"}

このディクショナリーに"絵文字を変換するデモ”という文字列の対応関係を調べた際に出現するアスキーアートを出力するプログラムを作成せよ
"""
)

emoji_convert = {
    "を": "̀",
    "絵": "(",
    "換": "•",
    "変": "ㅂ",
    "字": "•",
    "る": ")",
    "モ": "✧",
    "文": "๑",
    "デ": "و",
    "す": "́",
}

print("".join([emoji_convert.get(char) for char in "絵文字を変換するデモ"]))

#    __
#  /'__`\
# /\_\L\ \
# \/_/_\_<_
#   /\ \L\ \
#   \ \____/
#    \/___/
#
#
print_question(
    """
問3.
下記がフランス産のワインを例示したものである

・ラ・ピエレレ ラ・シャブリジェンヌ
・シャトー・ソシアンド・マレ
・ボーモン・デ・クレイエール グランド・レゼルヴ ブリュット
・クラレンドル ルージュ バイ シャトー・オー・ブリオン
・クレマン・ド・ブルゴーニュ・ロゼ
・キュヴェ・マリー・クリスティーヌ プロヴァンス ロゼ
・ルイ・ロデレール・ブリュット・プルミエ
・シャトー・トゥール・ド ・ミランボー レゼルヴ ブラン
・シャトー・マルゴー
・ピュリニー・モンラッシェ・プルミエ・クリュ・レ・シャン・ガン
・ブリュット レフェランス
・シャトー・モンペラ ルージュ

下記がスパークリングワインを例示したものである

・ボーモン・デ・クレイエール グランド・レゼルヴ ブリュット
・コルテ・ジャーラ・プロセッコ・ミッレジマート・ドライ
・ルイ・ロデレール・ブリュット・プルミエ
・ラ・セルヴァティカ・アスティ・スプマンテ
・ベルスター・キュヴェ・ロゼ
・プロジェクト・クワトロ・カヴァ・プレミアム・レゼルヴァ
・リースリング・ゼクト・ブリュット
・ブリュット レフェランス
・クレマン・ド・ブルゴーニュ・ロゼ

setを用いてこの中からフランス産のスパークリングワインを抽出するプログラムを実装せよ
"""
)

france = set(
    [
        "ラ・ピエレレ ラ・シャブリジェンヌ",
        "シャトー・ソシアンド・マレ",
        "ボーモン・デ・クレイエール グランド・レゼルヴ ブリュット",
        "クラレンドル ルージュ バイ シャトー・オー・ブリオン",
        "クレマン・ド・ブルゴーニュ・ロゼ",
        "キュヴェ・マリー・クリスティーヌ プロヴァンス ロゼ",
        "ルイ・ロデレール・ブリュット・プルミエ",
        "シャトー・トゥール・ド ・ミランボー レゼルヴ ブラン",
        "シャトー・マルゴー",
        "ピュリニー・モンラッシェ・プルミエ・クリュ・レ・シャン・ガン",
        "ブリュット レフェランス",
        "シャトー・モンペラ ルージュ",
    ]
)

sparkling = set(
    [
        "ボーモン・デ・クレイエール グランド・レゼルヴ ブリュット",
        "コルテ・ジャーラ・プロセッコ・ミッレジマート・ドライ",
        "ルイ・ロデレール・ブリュット・プルミエ",
        "ラ・セルヴァティカ・アスティ・スプマンテ",
        "ベルスター・キュヴェ・ロゼ",
        "プロジェクト・クワトロ・カヴァ・プレミアム・レゼルヴァ",
        "リースリング・ゼクト・ブリュット",
        "ブリュット レフェランス",
        "クレマン・ド・ブルゴーニュ・ロゼ",
    ]
)

[print(name) for name in france & sparkling]


#  __ __
# /\ \\ \
# \ \ \\ \
#  \ \ \\ \_
#   \ \__ ,__\
#    \/_/\_\_/
#       \/_/
#
#
print_question(
    """
問4.
整数の中から3の倍数と7の倍数を取り出して、小さい順に並べると下記のようになる。

3, 6, 7, 9, 12, 14, 15, 18, 21, 24, 27, ...

この数の列について、1番目から99番目の数値の和を求めよ（2019年麻布中学、算数の入試問題）
"""
)

_num = 1
_sum = 0
_count = 0
_list = []


def next_num():
    global _list, _num, _count, _sum
    _num += 1
    if all([_num % 3, _num % 7]):
        return
    _count += 1
    _list.append(_num)
    _sum += _num
    if _count <= 99:
        return
    _sum -= _list.pop(0)


while _count != 99:
    next_num()
print(_sum)

#  ______
# /\  ___\
# \ \ \__/
#  \ \___``\
#   \/\ \L\ \
#    \ \____/
#     \/___/
#
#
print_question(
    """
問5.
問4.の数の中で連続して並ぶ99個の数を取り出し、その和を計算すると128205になった。取り出した数の中で最も小さい数は、数の列全体の何番目にあるか、計算して求めよ（2019年麻布中学、算数の入試問題）
"""
)

while _sum != 128205:
    next_num()
print(_count - 98)
